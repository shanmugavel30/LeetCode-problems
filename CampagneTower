package LeetCode;

public class ChampagneTower799 {
	public double champagneTower(int poured, int query_row, int query_glass) {
        double[][] dp=new double[101][101];
        dp[0][0]=poured;

        for(int i=0;i<=query_row;i++){
            for(int j=0;j<=i;j++){
                if(dp[i][j]>=1){
                    double over=dp[i][j]-1;
                    double left=over/2;
                    double right=over/2;

                    dp[i+1][j]+=left;
                    dp[i+1][j+1]+=right;
                    dp[i][j]=1;
                }
            }
        }
        return dp[query_row][query_glass];
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int p=2,q_r=1,q_g=1;
		ChampagneTower799 obj=new  ChampagneTower799();
		double res=obj.champagneTower(p,q_r,q_g);
		System.out.println(res);
	}

}
