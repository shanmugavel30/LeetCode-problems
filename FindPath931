package LeetCode;
//931 leetcode
public class FindPath {
	public static int minFallingPathSum(int[][] matrix) {
        if( matrix.length==0){
            return 0;
        }
        if(matrix.length>1){
        for(int i=matrix.length-2;i>=0;i--){
            for(int j=0;j<matrix[i].length;j++){
                int min=matrix[i+1][j];
                if(j>0)
                    min = Math.min(min,matrix[i+1][j-1]);
                if(j<matrix[i].length-1)
                    min = Math.min(min,matrix[i+1][j+1]);
                matrix[i][j]+=min;
            }
        }
    }
    int res=matrix[0][0];

    int n=matrix[0].length;
    for(int a=0;a<n;a++){
        if(res>matrix[0][a])
            res=matrix[0][a];
    }
    return res;  
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] matrix= {{2,1,3},{6,5,4},{7,8,9}};
		int output= minFallingPathSum(matrix);
		System.out.println(output);
	}

}
